parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    xyz13\InstagramBundle\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    instagram.client.http:
        public: true
        class: xyz13\InstagramBundle\Client\HttpClient

    instagram.web_driver.factory:
        class: xyz13\InstagramBundle\Instagram\Factory
        arguments:
            - "@instagram.client.http"

    instagram.web_driver.logger:
        class: Monolog\Logger
        arguments: ["instagram.web_driver.logger"]
        calls:
          - [pushHandler, ["@instagram.web_driver.stream_handler"]]

    instagram.web_driver.stream_handler:
        class: Monolog\Handler\StreamHandler
        arguments: [%kernel.logs_dir%/%kernel.environment%.web_driver.log, 100]